/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';

const functions = require('firebase-functions');
const admin = require('firebase-admin');
admin.initializeApp(functions.config().firebase);

/**
 * Triggers when a user gets a new follower and sends a notification.
 *
 * Followers add a flag to `/followers/{followedUid}/{followerUid}`.
 * Users save their device notification tokens to `/users/{followedUid}/notificationTokens/{notificationToken}`.
 */
exports.sendFollowerNotification = functions.database.ref('/notificationQueue/{receiverUID}/{cardUID}/{cardName}').onWrite(event => {

  const receiverUID = event.params.receiverUID;
  const cardUID = event.params.cardUID;
  const cardName = event.params.cardName

  admin.database().ref(`/notificationQueue/${receiverUID}/${cardUID}`).remove();

  // Get the list of device notification tokens.
  const getDeviceTokensPromise = admin.database().ref(`/users/${receiverUID}/fcmToken`).once('value');

  return Promise.all([getDeviceTokensPromise]).then(results => {
    const tokensSnapshot = results[0];

    // Notification details.
    const payload = {
      notification: {
        title: 'You have a new contact!',
        body: `${cardName} has shared a card with you!`,
        cardUID: cardUID
      }
    };

    // Listing all tokens.
    const fcmToken =  tokensSnapshot.val()

    // Send notifications to all tokens.
    return admin.messaging().sendToDevice(fcmToken, payload).then(response => {

    });
  });
});
